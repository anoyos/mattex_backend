# Generated by Django 4.0.4 on 2022-07-05 07:33

import SMMapp.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ApprovalFlow',
            fields=[
                ('approval_flow_id', models.IntegerField(primary_key=True, serialize=False, verbose_name='Project id')),
                ('name', models.CharField(max_length=250, verbose_name='Name')),
                ('step_flow', models.TextField(verbose_name='Step flow')),
                ('status', models.IntegerField(null=True, verbose_name='Status')),
                ('remark', models.TextField(null=True, verbose_name='Remark')),
                ('submission_type', models.CharField(max_length=100, null=True, verbose_name='Submission type')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('project_id', models.IntegerField(primary_key=True, serialize=False, verbose_name='Project id')),
                ('project_code', models.CharField(max_length=50, unique=True, verbose_name='Project code')),
                ('project_name', models.TextField(verbose_name='Project name')),
                ('project_display_name', models.TextField(verbose_name='Project display name')),
                ('client', models.CharField(blank=True, max_length=255, null=True, verbose_name='Client')),
                ('division', models.CharField(blank=True, max_length=255, null=True, verbose_name='Division')),
                ('status', models.IntegerField(null=True, verbose_name='Status')),
                ('project_in_charge', models.CharField(blank=True, max_length=255, null=True, verbose_name='Project in charge')),
            ],
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_number', models.CharField(editable=False, max_length=50, verbose_name='Document number')),
                ('document_date', models.DateField(auto_now_add=True, verbose_name='Document date')),
                ('document_edited', models.DateTimeField(auto_now=True, verbose_name='Last edit')),
                ('status', models.IntegerField(choices=[(1, 'In progress'), (2, 'Awaiting approval'), (3, 'Submitted')], default=1, editable=False, verbose_name='Status')),
                ('associated_content', models.JSONField(blank=True, editable=False, null=True, verbose_name='Associated content')),
                ('description', models.TextField(verbose_name='Submission description')),
                ('order_of_blocks', models.JSONField(blank=True, null=True, verbose_name='Order of blocks')),
                ('circulation_identification', models.CharField(blank=True, editable=False, max_length=255, null=True, verbose_name='Circulation identification')),
                ('circulation_identification_visible', models.BooleanField(blank=True, default=True, null=True, verbose_name='Circulation identification visible')),
                ('rev', models.IntegerField(blank=True, default=0, null=True, verbose_name='Rev.')),
                ('signoff_has_submitter', models.BooleanField(blank=True, default=False, null=True, verbose_name='Signoff has submitter')),
                ('approval_flow', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='approval_flow', to='SMMapp.approvalflow')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='submission_project', to='SMMapp.project')),
            ],
        ),
        migrations.CreateModel(
            name='SubmissionType',
            fields=[
                ('submission_type_id', models.IntegerField(primary_key=True, serialize=False, verbose_name='Submission type id')),
                ('model_type', models.CharField(max_length=255, verbose_name='Model type')),
                ('display_name', models.CharField(max_length=255, verbose_name='Display name')),
                ('status', models.IntegerField(blank=True, null=True, verbose_name='Status')),
            ],
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Name')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('order_of_blocks', models.JSONField(null=True, verbose_name='Order of blocks')),
                ('status', models.IntegerField(choices=[(1, 'In progress'), (2, 'Active'), (3, 'Inactive')], default=1, editable=False, verbose_name='Status')),
                ('community', models.BooleanField(default=True, verbose_name='Community')),
                ('circulation_identification_visible', models.BooleanField(blank=True, default=True, null=True, verbose_name='Circulation identification visible')),
                ('signoff_has_submitter', models.BooleanField(blank=True, default=False, null=True, verbose_name='Signoff has submitter')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=255, null=True, unique=True, verbose_name='Email')),
                ('emat_user_id', models.IntegerField(null=True, unique=True, verbose_name='Emat user id')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='Name')),
                ('title', models.CharField(max_length=255, null=True, verbose_name='Title')),
                ('job_title', models.CharField(max_length=255, null=True, verbose_name='Job title')),
                ('initials', models.CharField(max_length=255, null=True, verbose_name='Initials')),
                ('status', models.IntegerField(default=1, verbose_name='Status')),
                ('emat_status', models.IntegerField(default=1, verbose_name='Emat status')),
                ('signature', models.TextField(null=True, verbose_name='Signature')),
                ('signature_short', models.TextField(null=True, verbose_name='Signature short')),
                ('emat_admin', models.IntegerField(default=0, verbose_name='Emat admin')),
                ('avatar', models.CharField(max_length=255, null=True, verbose_name='Avatar')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Title',
            fields=[
                ('title_id', models.CharField(editable=False, max_length=100, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('project_level_id', models.CharField(blank=True, max_length=200, null=True, verbose_name='Project Level Identification')),
                ('no_of_submission', models.IntegerField(blank=True, null=True, verbose_name='No. of Submission')),
                ('free_text_fields', models.JSONField(blank=True, null=True)),
                ('order_of_fields', models.JSONField(null=True, verbose_name='Order of fields')),
                ('submission', models.OneToOneField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='title_submission', to='SMMapp.submission')),
                ('template', models.OneToOneField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='title_template', to='SMMapp.template')),
            ],
        ),
        migrations.AddField(
            model_name='template',
            name='creator',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='creator', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='template',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='project', to='SMMapp.project'),
        ),
        migrations.AddField(
            model_name='template',
            name='submission_type',
            field=models.ManyToManyField(blank=True, null=True, to='SMMapp.submissiontype'),
        ),
        migrations.AddField(
            model_name='submission',
            name='submitter',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='submitter', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='submission',
            name='target_recipient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='target_recipient', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='SignOff',
            fields=[
                ('signoff_id', models.CharField(editable=False, max_length=100, primary_key=True, serialize=False)),
                ('has_submitter', models.BooleanField(default=False, verbose_name='Submitter?')),
                ('no_of_blocks', models.IntegerField(default=1, editable=False, verbose_name='Number of blocks')),
                ('blocks', models.JSONField(default={'blocks': []}, verbose_name='Blocks')),
                ('approval_flow', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='signoff_approval_flow', to='SMMapp.approvalflow')),
                ('submission', models.OneToOneField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='signoff_submission', to='SMMapp.submission')),
                ('template', models.OneToOneField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='signoff_template', to='SMMapp.template')),
            ],
        ),
        migrations.CreateModel(
            name='Salutation',
            fields=[
                ('salutation_id', models.CharField(editable=False, max_length=100, primary_key=True, serialize=False)),
                ('to', models.CharField(blank=True, max_length=100, null=True, verbose_name='To')),
                ('attn', models.CharField(blank=True, max_length=100, null=True, verbose_name='Attn')),
                ('attn_visible', models.BooleanField(blank=True, default=True, null=True, verbose_name='Attn visiblity')),
                ('order_of_fields', models.JSONField(null=True, verbose_name='Order of fields')),
                ('submission', models.OneToOneField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='salutation_submission', to='SMMapp.submission')),
                ('template', models.OneToOneField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='salutation_template', to='SMMapp.template')),
            ],
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('reference_id', models.CharField(editable=False, max_length=100, primary_key=True, serialize=False)),
                ('reference', models.JSONField(blank=True, null=True, verbose_name='Reference')),
                ('order_of_fields', models.JSONField(null=True, verbose_name='Order of fields')),
                ('submission', models.OneToOneField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reference_submission', to='SMMapp.submission')),
                ('template', models.OneToOneField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reference_template', to='SMMapp.template')),
            ],
        ),
        migrations.CreateModel(
            name='NameValuePair',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('creator', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='namevaluepair_creator', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Header',
            fields=[
                ('header_id', models.CharField(editable=False, max_length=100, primary_key=True, serialize=False)),
                ('client_logo_1', models.ImageField(blank=True, null=True, upload_to=SMMapp.models.upload_to, verbose_name='Client logo 1')),
                ('client_logo_2', models.ImageField(blank=True, null=True, upload_to=SMMapp.models.upload_to, verbose_name='Client logo 2')),
                ('client_logo_3', models.ImageField(blank=True, null=True, upload_to=SMMapp.models.upload_to, verbose_name='Client logo 3')),
                ('contract_no', models.CharField(blank=True, max_length=100, null=True, verbose_name='Contract number')),
                ('project_name', models.TextField(blank=True, null=True, verbose_name='Project name')),
                ('contractor_logo_1', models.ImageField(blank=True, null=True, upload_to=SMMapp.models.upload_to, verbose_name='Contractor logo')),
                ('form_control_no', models.CharField(blank=True, max_length=200, null=True, verbose_name='Form control number')),
                ('ctrl_num_visible', models.BooleanField(blank=True, default=True, null=True, verbose_name='Form control number visibility')),
                ('order_of_fields', models.JSONField(null=True, verbose_name='Order of fields')),
                ('submission', models.OneToOneField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='header_submission', to='SMMapp.submission')),
                ('template', models.OneToOneField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='header_template', to='SMMapp.template')),
            ],
        ),
        migrations.CreateModel(
            name='FutureReply',
            fields=[
                ('futurereply_id', models.CharField(editable=False, max_length=100, primary_key=True, serialize=False)),
                ('reply', models.JSONField(blank=True, default={'Acceptance': False, 'Acceptance with comments': False, 'Rejected': False}, null=True, verbose_name='Reply')),
                ('free_text', models.JSONField(blank=True, default={'Comment': ''}, null=True, verbose_name='Free text')),
                ('name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Name')),
                ('signature', models.TextField(blank=True, null=True, verbose_name='Signature')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Date')),
                ('submission', models.OneToOneField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='futurereply_submission', to='SMMapp.submission')),
                ('template', models.OneToOneField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='futurereply_template', to='SMMapp.template')),
            ],
        ),
        migrations.CreateModel(
            name='DescriptionOfContent',
            fields=[
                ('descriptionofcontent_id', models.CharField(editable=False, max_length=100, primary_key=True, serialize=False)),
                ('description_of_content', models.JSONField(blank=True, null=True, verbose_name='Description of Content')),
                ('order_of_fields', models.JSONField(null=True, verbose_name='Order of fields')),
                ('top_free_text', models.TextField(blank=True, null=True, verbose_name='Top free text')),
                ('show_top_free_text', models.BooleanField(blank=True, default=False, null=True, verbose_name='Show top free text')),
                ('bottom_free_text', models.TextField(blank=True, null=True, verbose_name='Bottom free text')),
                ('show_bottom_free_text', models.BooleanField(blank=True, default=False, null=True, verbose_name='Show bottom free text')),
                ('submission', models.OneToOneField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='descriptionofcontent_submission', to='SMMapp.submission')),
                ('template', models.OneToOneField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='descriptionofcontent_template', to='SMMapp.template')),
            ],
        ),
        migrations.CreateModel(
            name='AttachmentFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
                ('file', models.FileField(upload_to=SMMapp.models.upload_to, validators=[django.core.validators.FileExtensionValidator(['pdf'])], verbose_name='File')),
                ('remarks', models.TextField(blank=True, null=True, verbose_name='Remarks')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Uploaded at')),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attached_files', to='SMMapp.submission')),
            ],
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('attachment_id', models.CharField(editable=False, max_length=100, primary_key=True, serialize=False)),
                ('attachment', models.BooleanField(blank=True, null=True, verbose_name='Attachment')),
                ('order_of_fields', models.JSONField(null=True, verbose_name='Order of fields')),
                ('submission', models.OneToOneField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attachment_submission', to='SMMapp.submission')),
                ('template', models.OneToOneField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attachment_template', to='SMMapp.template')),
            ],
        ),
        migrations.CreateModel(
            name='AboutThisSubmission',
            fields=[
                ('aboutthissubmission_id', models.CharField(editable=False, max_length=100, primary_key=True, serialize=False)),
                ('remarks', models.TextField(blank=True, null=True, verbose_name='Remarks')),
                ('purpose_of_submission', models.JSONField(blank=True, default={'For acceptance': False, 'For information': False, 'For record': False, 'For review': False}, null=True, verbose_name='Purpose of submission')),
                ('anticipated_date_of_reply', models.DateField(blank=True, null=True, verbose_name='Anticipated date of reply')),
                ('record_reply', models.BooleanField(blank=True, null=True, verbose_name='Record future reply on Cover')),
                ('order_of_fields', models.JSONField(null=True, verbose_name='Order of fields')),
                ('submission', models.OneToOneField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='aboutthissubmission_submission', to='SMMapp.submission')),
                ('template', models.OneToOneField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='aboutthissubmission_template', to='SMMapp.template')),
            ],
        ),
    ]
